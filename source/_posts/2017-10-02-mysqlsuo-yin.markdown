---
layout: post
title: "Mysql索引"
date: 2017-10-02 18:05
comments: true
categories: [Mysql]
---

#### [1.索引的优缺点原因](#1)
#####   [1.1为什么添加索引，查询速度变快](#1.1)
#####   [1.2为什么添加上索引，速度会变慢](#1.2)

#### [2.索引的类别](#2)
#####   [2.1主键索引](#2.1)
#####   [2.2唯一索引](#2.2)
#####   [2.3普通索引](#2.3)
#####   [2.4多列索引](#2.4)
#####   [2.5全文索引](#2.5)

<br/>

之前一直对索引没有很清晰的认识，每次一创建表时，就给外键加索引，只知道索引提高mysql搜索效率；
前阵子查阅了很多资料，有了比较清晰的认识，现在给出如下总结：
<br/>

<h2 id='1'>索引的优缺点原因</h2>

------------------

<h3 id='1.1'>为什么添加索引，查询速度变快</h3>

------------------

计算机查找某一条记录，如果不加索引，会在整个表中一条一条比较，将匹配的记录加入 **结果集**，很多人说这样会很慢，加了索引就快了。

为什么？

计算机先在索引列表中找到记录的 **位置**，既 **rowid**，然后直接去表中的对应位置取出记录，我就不明白了，查找索引列表难道不需要一条一条的匹配？计算机又不会出现说，看索引列表比直接看表中的记录要快，先在索引列表中找到记录对应的rowid也是要遍历的？难道不是同样的吗？

原因在于 **索引列表是排好序的**，可以通过类似于 **二分查找** 快速找到。直接查找是O(n)，二分查找是log2(n)

<br/>

<h3 id='1.2'>为什么添加上索引，速度会变慢</h3>

------------------

根据上面的回答，添加索引会 **建立有序的索引列表**，建立 **索引都需要维护**，你  **创建、插入或删除** 记录，都要到索引列表查询索引的位置并进行创建、插入或删除索引，这样非常耗时。那如果压根没去用索引，或者很少用它，这种无效索引反而会降低效率。

<br/>
<br/>

<h2 id='2'>索引的类别</h2>

------------------

<h3 id='2.1'>主键索引</h3>

------------------

添加PRIMARY KEY（主键索引）

``` sql
ALTER TABLE `table_name` ADD PRIMARY KEY ( `column` )
```

<br/>
<h3 id='2.2'>唯一索引</h3>

------------------

添加UNIQUE(唯一索引)

``` sql
ALTER TABLE `table_name` ADD UNIQUE ( `column` )
```

<br/>
<h3 id='2.3'>普通索引</h3>

------------------

添加INDEX(普通索引)

``` sql
ALTER TABLE `table_name` ADD INDEX index_name ( `column`)
```

<br/>
<h3 id='2.4'>多列索引</h3>

------------------

添加多列索引

``` sql
ALTER TABLE `table_name` ADD INDEX index_name ( `column1`,`column2`, `column3` )
```

<br/>
<h3 id='2.5'>全文索引</h3>

------------------

添加FULLTEXT(全文索引)
``` sql
ALTER TABLE `table_name` ADD FULLTEXT (`column`)
```

#### 如何使用：
在MySQL中创建全文索引之后，现在就该了解如何使用了。众所周知，在数据库中进行模糊查询是使用LIKE关键字进行查询，例如：
``` sql
SELECT * FROM article WHERE content LIKE '%查询字符串%'
```

那么，我们使用全文索引也是这样用的吗？当然不是，我们必须使用特有的语法才能使用全文索引进行查询。例如，我们想要在article表的title和content列中全文检索指定的查询字符串，可以如下编写SQL语句：

``` sql
SELECT * FROM article WHERE MATCH(title, content) AGAINST('查询字符串')
```

<br/>
