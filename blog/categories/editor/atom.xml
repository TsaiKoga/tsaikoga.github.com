<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Editor | TsaiKoga Blog]]></title>
  <link href="https://TsaiKoga.github.com/blog/categories/editor/atom.xml" rel="self"/>
  <link href="https://TsaiKoga.github.com/"/>
  <updated>2019-05-11T16:04:40+08:00</updated>
  <id>https://TsaiKoga.github.com/</id>
  <author>
    <name><![CDATA[TsaiKoga]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Atom 快捷键使用大全]]></title>
    <link href="https://TsaiKoga.github.com/blog/2016/05/06/atomkuai-jie-jian-shi-yong-da-quan/"/>
    <updated>2016-05-06T11:36:00+08:00</updated>
    <id>https://TsaiKoga.github.com/blog/2016/05/06/atomkuai-jie-jian-shi-yong-da-quan</id>
    <content type="html"><![CDATA[<h3><a href="#1">1. 快捷键标识</a></h3>

<h3><a href="#2">2. 内容</a></h3>

<h2 id="1">快捷键标识</h2>


<p>⌘ : Command key</p>

<p>⌃ : Control key</p>

<p>⌫ : Delete key</p>

<p>← : Left arrow key</p>

<p>→ : Right arrow key</p>

<p>↑ : Up arrow key</p>

<p>↓ : Down arrow key</p>

<p>⌥ : Option or Alt key</p>

<p>↩ : Return or Enter key</p>

<p>⇧ : Shift key</p>

<br/>


<p>终端输入atom ./ 将会用 atom 打开当前目录</p>

<h2 id="2">内容</h2>


<p><a href="#2.1">2.1. 命令板</a></p>

<p><a href="#2.2">2.2. 配置</a></p>

<p><a href="#2.3">2.3. 项目任务</a></p>

<p><a href="#2.4">2.4. 自动补全</a></p>

<p><a href="#2.5">2.5. 书签</a></p>

<p><a href="#2.6">2.6. 括号 </a></p>

<p><a href="#2.7">2.7. 代码折叠</a></p>

<p><a href="#2.8">2.8. 代码导航和管理</a></p>

<p><a href="#2.9">2.9. 字符变化</a></p>

<p><a href="#2.10">2.10. 注释</a></p>

<p><a href="#2.11">2.11. 编辑器视图任务</a></p>

<p><a href="#2.12">2.12. 文件任务</a></p>

<p><a href="#2.13">2.13. 查找和替换</a></p>

<p><a href="#2.14">2.14. 字体任务</a></p>

<p><a href="#2.15">2.15. 语法</a></p>

<p><a href="#2.16">2.16. 搜索任务</a></p>

<br/>




<h3 id="2.1">命令板</h3>


<hr />

<table style="padding: 10px; width: 100%;">
  <thead>
    <tr>
      <th>任务</th>
      <th>按键</th>
    </tr>
  </thead>

  <tbody>
    <tr>
      <td>打开命令板</td>
      <td>⌘-⇧-p</td>
    </tr>
  </tbody>
</table>




<br/>


<h3 id="2.2">配置</h3>


<hr />

<table style="padding: 10px; width: 100%;">
  <thead>
    <tr>
      <th>任务</th>
      <th>按键</th>
    </tr>
  </thead>

  <tbody>
    <tr>
      <td>打开配置编辑器</td>
      <td>⌘-,</td>
    </tr>
  </tbody>
</table>




<br/>


<h3 id="2.3">项目任务</h3>


<hr />

<table style="padding: 10px; width: 100%;">
  <thead>
    <tr>
      <th>任务</th>
      <th>按键</th>
    </tr>
  </thead>

  <tbody>
    <tr>
      <td>隐藏应用</td>
      <td>⌘-h</td>
    </tr>
    <tr>
      <td>隐藏其他应用</td>
      <td>⌥-⌘-h</td>
    </tr>
    <tr>
      <td>最小化应用</td>
      <td>⌘-m</td>
    </tr>
    <tr style="color: red;">
      <td>新建文件</td>
      <td>⌘-n</td>
    </tr>
    <tr>
      <td>新建窗口</td>
      <td>⌘-⇧-n</td>
    </tr>
    <tr>
      <td>打开应用</td>
      <td>⌘-o</td>
    </tr>
    <tr>
      <td>打开Dev</td>
      <td>⇧-⌘-o</td>
    </tr>
    <tr>
      <td>退出Atom</td>
      <td>⌘-q</td>
    </tr>
  </tbody>
</table>




<br/>


<h3 id="2.4">自动补全</h3>


<hr />

<table style="padding: 10px; width: 100%;">
  <thead>
    <tr>
      <th>任务</th>
      <th>按键</th>
    </tr>
  </thead>

  <tbody>
    <tr>
      <td>打开配置编辑器</td>
      <td>⌘-,</td>
    </tr>
  </tbody>
</table>




<br/>


<h3 id="2.5">书签</h3>


<hr />

<table style="padding: 10px; width: 100%;">
  <thead>
    <tr>
      <th>任务</th>
      <th>按键</th>
    </tr>
  </thead>

  <tbody>
    <tr>
      <td>切换书签</td>
      <td>⌘-F2</td>
    </tr>
    <tr>
      <td>查看所有书签</td>
      <td>⌃-F2</td>
    </tr>
    <tr>
      <td>跳到下一个书签</td>
      <td>F2</td>
    </tr>
    <tr>
      <td>跳到上一个书签</td>
      <td>⇧-F2</td>
    </tr>
    <tr>
      <td>清除所有书签</td>
      <td>⌘-⇧-F2</td>
    </tr>
  </tbody>
</table>




<br/>


<h3 id="2.6">括号</h3>


<hr />

<table style="padding: 10px; width: 100%;">
  <thead>
    <tr>
      <th>任务</th>
      <th>按键</th>
    </tr>
  </thead>

  <tbody>
    <tr>
      <td>寻找匹配的括号</td>
      <td>⌃-m</td>
    </tr>
  </tbody>
</table>




<br/>


<h3 id="2.7">代码折叠</h3>


<hr />

<table style="padding: 10px; width: 100%;">
  <thead>
    <tr>
      <th>任务</th>
      <th>按键</th>
    </tr>
  </thead>

  <tbody>
    <tr style="color: red;">
      <td>合上代码</td>
      <td>⌥-⌘-[</td>
    </tr>
    <tr style="color: red;">
      <td>展开代码</td>
      <td>⌥-⌘-]</td>
    </tr>
    <tr>
      <td>在缩排第N级合上代码</td>
      <td>⌘-k cmd-N</td>
    </tr>
    <tr>
      <td>合上所选的文本</td>
      <td>⌥-⌘-⌃-f</td>
    </tr>
    <tr style="color: red;">
      <td>展开所有代码</td>
      <td>⌥-⌘-}</td>
    </tr>
  </tbody>
</table>




<br/>


<h3 id="2.8">代码导航和管理</h3>


<hr />

<table style="padding: 10px; width: 100%;">
  <thead>
    <tr>
      <th>任务</th>
      <th>按键</th>
    </tr>
  </thead>

  <tbody>
    <tr>
      <td>裁剪到行末</td>
      <td>⌃-k</td>
    </tr>
    <tr>
      <td>删除到单词起始位</td>
      <td>⌥-⌫</td>
    </tr>
    <tr>

      <td>删除到单词末尾</td>
      <td>⌥-d</td>
    </tr>
    <tr>
      <td>删除行</td>
      <td>⌃-⇧-k</td>
    </tr>
    <tr>
      <td>复制行</td>
      <td>⌘-⇧-d</td>
    </tr>
    <tr>
      <td>跳到行</td>
      <td>⌃-g</td>
    </tr>
    <tr>
      <td>跳到匹配的括号</td>
      <td>⌃-m</td>
    </tr>
    <tr>
      <td>缩进所选文字</td>
      <td>⌘-]</td>
    </tr>
    <tr>
      <td>前进所选文字</td>
      <td>⌘-[</td>
    </tr>
    <tr>
      <td>加入行</td>
      <td>⌘-j</td>
    </tr>
    <tr>
      <td>移动单词到开头</td>
      <td>⌥-b</td>
    </tr>
    <tr>
      <td>移动单词到末尾</td>
      <td>⌥-f</td>
    </tr>
    <tr>
      <td>移动到行起始位</td>
      <td>⌃-a</td>
    </tr>
    <tr>
      <td>移动到行末</td>
      <td>⌃-e</td>
    </tr>
    <tr>
      <td>移动行到上面</td>
      <td>⌘-⌃-↑</td>
    </tr>
    <tr>
      <td>移动行到下面</td>
      <td>⌘-⌃-↓</td>
    </tr>
    <tr>
      <td>移动文件到顶部</td>
      <td>⌘-↑</td>
    </tr>
    <tr>
      <td>移动文件到底部</td>
      <td>⌘-↓</td>
    </tr>
    <tr>
      <td>移动到行的一个字符</td>
      <td>⌘-←</td>
    </tr>
    <tr>
      <td>移动到行的最后一个字符</td>
      <td>⌘-→</td>
    </tr>
    <tr>
      <td>移动左边的字符</td>
      <td>⌘-⌃-b</td>
    </tr>
    <tr>
      <td>移动右边的字符</td>
      <td>⌘-⌃-f</td>
    </tr>
    <tr>
      <td>移动到单词的开头</td>
      <td>⌥-⇧-b</td>
    </tr>
    <tr>
      <td>移动到单词的末尾</td>
      <td>⌥-⇧-f</td>
    </tr>
    <tr>
      <td>移动整个单词</td>
      <td>⌃-⇧-w</td>
    </tr>
    <tr>
      <td>选择到行的第一个字符</td>
      <td>⌥-⇧-a</td>
    </tr>
    <tr>
      <td>选择到行的最后一个字符</td>
      <td>⌥-⇧-e</td>
    </tr>
    <tr>
      <td>选择到相同的位置</td>
      <td>⌥-⇧-n</td>
    </tr>
    <tr>
      <td>选择到上一行相同的位置</td>
      <td>⌥-⇧-p</td>
    </tr>
    <tr>
      <td>选择到文件头</td>
      <td>⌘-⇧-↑</td>
    </tr>
    <tr>
      <td>选择到文件尾</td>
      <td>⌘-⇧-↓</td>
    </tr>
    <tr>
      <td>选择全部</td>
      <td>⌘-a</td>
    </tr>
    <tr>
      <td>选择到下一个</td>
      <td>⌘-d</td>
    </tr>
    <tr>
      <td>选择行</td>
      <td>⌘-L</td>
    </tr>
    <tr>
      <td>切换注释</td>
      <td>⌘-/</td>
    </tr>
  </tbody>
</table>




<br/>


<h3 id="2.9">字符变化</h3>


<hr />

<table style="padding: 10px; width: 100%;">
  <thead>
    <tr>
      <th>任务</th>
      <th>按键</th>
    </tr>
  </thead>

  <tbody>
    <tr style="color: red;">
      <td>将Tab变成空格</td>
      <td>⌥-⌘-[</td>
    </tr>
    <tr style="color: red;">
      <td>将空格变成Tab</td>
      <td>⌥-⌘-]</td>
    </tr>
    <tr>
      <td>变成大写</td>
      <td>⌘-k-u</td>
    </tr>
    <tr>
      <td>变成小写</td>
      <td>⌘-k-L</td>
    </tr>
  </tbody>
</table>




<br/>


<h3 id="2.10">注释</h3>


<hr />

<table style="padding: 10px; width: 100%;">
  <thead>
    <tr>
      <th>任务</th>
      <th>按键</th>
    </tr>
  </thead>

  <tbody>
    <tr style="color: red;">
      <td>切换注释</td>
      <td>⌘-/</td>
    </tr>
  </tbody>
</table>




<br/>


<h3 id="2.11">编辑器视图任务</h3>


<hr />

<table style="padding: 10px; width: 100%;">
  <thead>
    <tr>
      <th>任务</th>
      <th>按键</th>
    </tr>
  </thead>

  <tbody>
    <tr>
      <td>垂直拆分面板</td>
      <td>⌘-k-↓</td>
    </tr>
    <tr>
      <td>水平拆分面板</td>
      <td>⌘-k-→</td>
    </tr>
    <tr>
      <td>垂直导航面板</td>
      <td>⌘-k ⌘-↓</td>
    </tr>
    <tr>
      <td>水平导航面板</td>
      <td>⌘-k ⌘-→</td>
    </tr>
    <tr>
      <td>切换全屏</td>
      <td>⌃-⌘-f</td>
    </tr>
    <tr style="color: red;">
      <td>切换树</td>
      <td>⌘-\</td>
    </tr>
  </tbody>
</table>




<br/>


<h3 id="2.12">文件任务</h3>


<hr />

<table style="padding: 10px; width: 100%;">
  <thead>
    <tr>
      <th>任务</th>
      <th>按键</th>
    </tr>
  </thead>

  <tbody>
    <tr>
      <td>模糊搜索文件</td>
      <td>⌘-t</td>
    </tr>
    <tr>
      <td>寻找并打开文件</td>
      <td>⌘-b</td>
    </tr>
    <tr>
      <td>找最近更改但是还未跟踪的文件（git）</td>
      <td>⌘-⇧-b</td>
    </tr>
    <tr>
      <td>打开树</td>
      <td>⌃-0</td>
    </tr>
    <tr>
      <td>切换到树</td>
      <td>⌘-\\</td>
    </tr>
    <tr style="color: red;">
      <td>增加文件</td>
      <td>a</td>
    </tr>
    <tr style="color: red;">
      <td>移动文件</td>
      <td>m</td>
    </tr>
    <tr style="color: red;">
      <td>删除文件</td>
      <td>⌫</td>
    </tr>
    <tr>
      <td>重新打开文件</td>
      <td>⌘-⇧-t</td>
    </tr>
  </tbody>
</table>




<br/>


<h3 id="2.13">查找和替换</h3>


<hr />

<table style="padding: 10px; width: 100%;">
  <thead>
    <tr>
      <th>任务</th>
      <th>按键</th>
    </tr>
  </thead>

  <tbody>
    <tr>
      <td>在当前文件查找字符串</td>
      <td>⌘-f</td>
    </tr>
    <tr>
      <td>整个项目中查找字符串</td>
      <td>⇧-⌘-f</td>
    </tr>
    <tr>
      <td>跳到匹配的字符串</td>
      <td>⌘-g</td>
    </tr>
    <tr style="color: red;">
      <td>跳到前面匹配的字符串</td>
      <td>⇧-⌘-g</td>
    </tr>
    <tr>
      <td>跳到后面匹配的字符串</td>
      <td>⌘-d</td>
    </tr>
    <tr style="color: red;">
      <td>选择所有匹配的字符串</td>
      <td>⌃-⌘-g</td>
    </tr>
    <tr>
      <td>替换当前文件的字符串</td>
      <td>⌥-⌘-f</td>
    </tr>
  </tbody>
</table>




<br/>




<h3 id="2.14">字体任务</h3>


<hr />

<table style="padding: 10px; width: 100%;">
  <thead>
    <tr>
      <th>任务</th>
      <th>按键</th>
    </tr>
  </thead>

  <tbody>
    <tr>
      <td>增加字体大小</td>
      <td>cmd-+</td>
    </tr>
    <tr>
      <td>减少字体大小</td>
      <td>cmd—</td>
    </tr>
  </body>
</table>




<br/>




<h3 id="2.15">语法</h3>


<hr />

<table style="padding: 10px; width: 100%;">
  <thead>
    <tr>
      <th>任务</th>
      <th>按键</th>
    </tr>
  </thead>

  <tbody>
    <tr>
      <td>选择语法</td>
      <td>⌃-⇧-L</td>
    </tr>
  </tbody>
</table>




<br/>




<h3 id="2.16">搜索任务</h3>


<hr />

<table style="padding: 10px; width: 100%;">
  <thead>
    <tr>
      <th>任务</th>
      <th>按键</th>
    </tr>
  </thead>

  <tbody>
    <tr>
      <td>搜索符号</td>
      <td>⌘-r</td>
    </tr>
    <tr>
      <td>整个项目中搜索符号</td>
      <td>⌘-⇧-r</td>
    </tr>
  </tbody>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim配置]]></title>
    <link href="https://TsaiKoga.github.com/blog/2013/10/22/vimpei-zhi/"/>
    <updated>2013-10-22T14:24:00+08:00</updated>
    <id>https://TsaiKoga.github.com/blog/2013/10/22/vimpei-zhi</id>
    <content type="html"><![CDATA[<p>说到vim，大家应该都不陌生。它是类似于vi的编辑器，在vi的基础上增加了很多新特性。</p>

<p><img src="/images/posts/2013-10-22/vim.jpg" title="Vim图" alt="图片无法显示" /></p>

<h2>目录</h2>

<h4><a href="#1">1 vim 中容易忘掉但非常有用的命令</a></h4>

<h4><a href="#2">2 .vimrc配置文件</a></h4>

<h5><a href="#2.1">2.1 基本配置说明</a></h5>

<h5><a href="#2.2">2.2 括号补全</a></h5>

<h4><a href="#3">3 VIM 常用插件</a></h4>

<h5><a href="#3.1">3.1 NERDTree 目录树</a></h5>

<h5><a href="#3.2">3.2 NERDCommenter 注释</a></h5>

<h5><a href="#3.3">3.3 Scsope 跳转</a></h5>

<br/>


<br/>




<h2 id='1'>1 vim 中容易忘掉但非常有用的命令</h2>


<hr />

<ul>
<li>多选        ctrl+v(mac), ctrl+q(windows/linux)</li>
<li>打开文件    :open filename</li>
<li>注释        NERD_commenter命令是\cc或,cc</li>
<li>解除注释     NERD_commenter命令是\cu或,cu</li>
<li>开启高亮    :syntax on</li>
<li>开启行号    :set number</li>
<li>跳转方法    cscope 的命令 ctl+]（必须先建立数据库和连接）</li>
<li>回退方法    cscope 的命令 ctl+t</li>
<li>跳到目录树  ctrl+w+h</li>
<li>跳回文件页  ctrl+w+l</li>
</ul>


<h2 id='2'>2 .vimrc配置文件</h2>


<hr />

<h3 id="2.1">2.1 基本配置说明</h3>


<p>以下内容复制到用户目录下的.vimrc文件，可以更改vim配置，使Vim更美观，更好用:</p>

<p>``` sh</p>

<pre><code>set nocompatible            " 关闭 vi 兼容模式
    syntax on                   " 自动语法高亮
    colorscheme molokai         " 设定配色方案
    set number                  " 显示行号
    set cursorline              " 突出显示当前行
    set ruler                   " 打开状态栏标尺
    set shiftwidth=4            " 设定 &lt;&lt; 和 &gt;&gt; 命令移动时的宽度为 4
    set softtabstop=4           " 使得按退格键时可以一次删掉 4 个空格
    set tabstop=4               " 设定 tab 长度为 4
    set nobackup                " 覆盖文件时不备份
    set autochdir               " 自动切换当前目录为当前文件所在的目录
    filetype plugin indent on   " 开启插件
    set backupcopy=yes          " 设置备份时的行为为覆盖
    set ignorecase smartcase    " 搜索时忽略大小写，但在有一个或以上大写字母时仍保持对大小写敏感
    set nowrapscan              " 禁止在搜索到文件两端时重新搜索
    set incsearch               " 输入搜索内容时就显示搜索结果
    set hlsearch                " 搜索时高亮显示被找到的文本
    set noerrorbells            " 关闭错误信息响铃
    set novisualbell            " 关闭使用可视响铃代替呼叫
    set t_vb=                   " 置空错误铃声的终端代码
    " set showmatch               " 插入括号时，短暂地跳转到匹配的对应括号
    " set matchtime=2             " 短暂跳转到匹配括号的时间
    set magic                   " 设置魔术
    set hidden                  " 允许在有未保存的修改时切换缓冲区，此时的修改由 vim 负责保存
    set guioptions-=T           " 隐藏工具栏  （等号前后不能空格）
    set guioptions-=m           " 隐藏菜单栏
    set smartindent             " 开启新行时使用智能自动缩进
    set backspace=indent,eol,start
                                                            " 不设定在插入状态无法用退格键和 Delete 键删除回车符
    set cmdheight=1             " 设定命令行的行数为 1
    set laststatus=2            " 显示状态栏 (默认值为 1, 无法显示状态栏)
    set statusline=\ %&lt;%F[%1*%M%*%n%R%H]%=\ %y\ %0(%{&amp;fileformat}\ %{&amp;encoding}\ %c:%l/%L%)\
                                                            " 设置在状态行显示的信息
    set foldenable              " 开始折叠
    set foldmethod=syntax       " 设置语法折叠

    "窗口分割时,进行切换的按键热键需要连接两次,比如从下方窗口移动
    "光标到上方窗口,需要&lt;c-w&gt;&lt;c-w&gt;k,非常麻烦,现在重映射为&lt;c-k&gt;,切换的
    "时候会变得非常方便.
    nnoremap &lt;C-h&gt; &lt;C-w&gt;h
    nnoremap &lt;C-j&gt; &lt;C-w&gt;j
    nnoremap &lt;C-k&gt; &lt;C-w&gt;k
    nnoremap &lt;C-l&gt; &lt;C-w&gt;l
</code></pre>

<p>```</p>

<br/>




<h3 id='2.2'>2.2 括号补全：</h3>


<p>``` sh</p>

<pre><code>    inoremap (  ()&lt;Esc&gt;i                " inoremap表示输入模式下的匹配,当有"("时，匹配")"并退出重新进入"i编辑模式"
    inoremap [  []&lt;Esc&gt;i
    inoremap {  {}&lt;Esc&gt;i
    autocmd Syntax html,vim inoremap &lt; &lt;lt&gt;&gt;&lt;Esc&gt;i | inoremap &gt; &lt;c-r&gt;=ClosePair('&gt;')&lt;CR&gt;
    inoremap ) &lt;c-r&gt;=ClosePair(')')&lt;CR&gt;
    inoremap ] &lt;c-r&gt;=ClosePair(']')&lt;CR&gt;
    inoremap } &lt;c-r&gt;=CloseBracket()&lt;CR&gt;
    inoremap " &lt;c-r&gt;=QuoteDelim('"')&lt;CR&gt;
    inoremap ' &lt;c-r&gt;=QuoteDelim("'")&lt;CR&gt;

    function ClosePair(char)
        if getline('.')[col('.') - 1] == a:char
            return "\&lt;Right&gt;"
        else
            return a:char
        endif
    endf

    function CloseBracket()
        if match(getline('.' + 1), '\s*}') &lt; 0
            return "\&lt;CR&gt;}"
        else
            return "\&lt;Esc&gt;j0f}a"
        endif
    endf

    function QuoteDelim(char)
        let line = getline('.')
        let col = col('.')
        if line[col-2] == "\\"
            "Inserting a quoted quotation mark into string
            return a:char
        elseif line[col-1] == a:char
            "Escaping out of the string
            return "\&lt;Right&gt;"
        else
            "Starting a String
            return a:char.a:char."\&lt;Esc&gt;i"
        endif
    endf
</code></pre>

<p>```</p>

<br/>


<br/>




<h2 id='3'>3 VIM 常用插件</h2>


<hr />

<h3 id='3.1'>3.1 NERDTree 目录树</h3>


<p>功能：用于展示目录树
安装：下载之后，在 .vim/ 目录中创建 plugin/ 和 doc/ 目录，</p>

<pre><code> 将 NERDTree.txt 放入 doc/，将 NERDTree.vim 放入 plugin/。
</code></pre>

<p>用法：<a href="https://www.jianshu.com/p/eXMxGx">https://www.jianshu.com/p/eXMxGx</a></p>

<p>``` sh</p>

<pre><code>    "-----------------------------------------------------------------
    " plugin - NERD_tree.vim 以树状方式浏览系统中的文件和目录
    " :ERDtree 打开NERD_tree         :NERDtreeClose    关闭NERD_tree
    " o 打开关闭文件或者目录         t 在标签页中打开
    " T 在后台标签页中打开           ! 执行此文件
    " p 到上层目录                   P 到根目录
    " K 到第一个节点                 J 到最后一个节点
    " u 打开上层目录                 m 显示文件系统菜单（添加、删除、移动操作）
    " r 递归刷新当前目录             R 递归刷新当前根目录
    "-----------------------------------------------------------------
    " F3 NERDTree 切换
    map &lt;F3&gt; :NERDTreeToggle&lt;CR&gt;
    imap &lt;F3&gt; &lt;ESC&gt;:NERDTreeToggle&lt;CR&gt;
</code></pre>

<p>```</p>

<br/>




<h3 id='3.2'>3.2 NERDCommenter 注释</h3>


<p>功能：用于快速注释和解除注释，使用命令请查看顶部</p>

<p>``` sh</p>

<pre><code>    "-----------------------------------------------------------------
    " plugin - NERD_commenter.vim   注释代码用的，
    " [count],cc 光标以下count行逐行添加注释(7,cc)
    " [count],cu 光标以下count行逐行取消注释(7,cu)
    " [count],cm 光标以下count行尝试添加块注释(7,cm)
    " ,cA 在行尾插入 /* */,并且进入插入模式。 这个命令方便写注释。
    " 注：count参数可选，无则默认为选中行或当前行
    "-----------------------------------------------------------------
    let NERDSpaceDelims=1       " 让注释符与语句之间留一个空格
    let NERDCompactSexyComs=1   " 多行注释时样子更好看
</code></pre>

<p>```</p>

<br/>




<h3 id='3.3'>3.3 Scsope 跳转</h3>


<p>cscope 可以说是 ctags 的升级版本
功能：可以对函数以及部分类型定义进行跳转</p>

<p><code>sh
sudo apt-get install cscope
</code></p>

<p>使用举例：
在终端下，转到你源码的所在目录然后</p>

<p><code>sh
cscope -Rbkq  &lt;回车&gt;
</code></p>

<h5>参数说明：</h5>

<blockquote><p>R 表示把所有子目录里的文件也建立索引</p>

<p>b 表示cscope不启动自带的用户界面，而仅仅建立符号数据库</p>

<p>q 生成cscope.in.out和cscope.po.out文件，加快cscope的索引速度</p>

<p>k 在生成索引文件时，不搜索/usr/include目录</p></blockquote>

<p>之后会在当前目录生成几个文件，  cscope.in.out和cscope.po.out文件,cscope.out，</p>

<p>vim的normal模式下输入[建立cscope数据库]</p>

<p><code>sh
:cs add cscope.out
</code></p>

<p>或者在 .vimrc 中加入，这样每次打开vim就可以直接使用cscope了。</p>

<p>``` sh
if filereadable(&ldquo;cscope.out&rdquo;)</p>

<pre><code>cs add cscope.out
</code></pre>

<p>endif
```</p>

<p>默认情况下cscope值会在当前目录下针对c、iex和yacc（扩展名分别为.c、.h、.I、.y）程序文件进行解析（如果指定了-R参数则包含其自身的子目录）。
这样出现的问题就是，我们对于C++、Java、PHP 等文件怎么办，
解决方案是：我们可以生成一个名为cscope.finds的文件列表，并交由cscope去解析。
在Linux系统中，生成这个文件列表的方法是：</p>

<p><code>sh
find –name "*.php" &gt; cscope.files
</code></p>

<p>然后运行下面命令 <strong>重新生成数据库</strong> 就OK了。</p>

<p><code>sh
cscope –b
</code></p>

<p>然后进入文件，输入你需要查找的方法，就会直接跳转到该方法：</p>

<p><code>sh
:cs find g checkStoreEmployee
</code></p>

<p>也可以在 .vimrc 中加入：</p>

<p>``` sh
if has(&ldquo;cscope&rdquo;)</p>

<p>  set csprg=/usr/local/bin/cscope</p>

<p>  set csto=0</p>

<p>  set cst</p>

<p>  set nocsverb</p>

<p>  &ldquo; add any database in current directory</p>

<p>  if filereadable(&ldquo;cscope.out&rdquo;)</p>

<pre><code>cs add cscope.out

" else add database pointed to by environment
</code></pre>

<p>  elseif $CSCOPE_DB != &ldquo;&rdquo;</p>

<pre><code>cs add $CSCOPE_DB
</code></pre>

<p>  endif</p>

<p>  set csverb</p>

<p>endif
```</p>

<p>在 vim normal 模式下执行：</p>

<p><code>sh
:source ~/.vimrc
</code></p>

<p>即可方便使用 <code>ctl + ]</code>来快速跳到方法 和 <code>ctl + t</code> 回退到原方法。</p>

<br/>


<p><em>感谢使用vim配置，记住要将vim编辑器重启后才生效。</em></p>
]]></content>
  </entry>
  
</feed>
